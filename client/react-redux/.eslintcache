[{"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\reportWebVitals.js":"1","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\index.js":"2","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\App.js":"3","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\components\\overview\\Overview.js":"4","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\Logo.js":"5","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\components\\volunteer\\Volunteer.js":"6","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\redux\\Stats.reducer.js":"7","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\redux\\store.js":"8","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\utils\\common.js":"9","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\components\\overview\\stats\\Stats.js":"10"},{"size":362,"mtime":1607288097961,"results":"11","hashOfConfig":"12"},{"size":563,"mtime":1609146023922,"results":"13","hashOfConfig":"12"},{"size":1250,"mtime":1609146004883,"results":"14","hashOfConfig":"12"},{"size":7419,"mtime":1609153438872,"results":"15","hashOfConfig":"12"},{"size":1014,"mtime":1609100027928,"results":"16","hashOfConfig":"12"},{"size":4774,"mtime":1609148057319,"results":"17","hashOfConfig":"12"},{"size":233,"mtime":1609153209988,"results":"18","hashOfConfig":"12"},{"size":536,"mtime":1609146032583,"results":"19","hashOfConfig":"12"},{"size":1388,"mtime":1609147675191,"results":"20","hashOfConfig":"12"},{"size":3070,"mtime":1609153634930,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fts1gd",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\reportWebVitals.js",[],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\index.js",[],["44","45"],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\App.js",[],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\components\\overview\\Overview.js",[],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\Logo.js",[],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\components\\volunteer\\Volunteer.js",["46"],"import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport './Volunteer.css'\r\nimport { Button, IconButton, TextField } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url_volunteer, httpOptions, httpOptionsBody } from '../../utils/common'\r\n\r\n\r\nfunction Volunteer() {\r\n\r\n  const initialFormState = { name: '', email: '', phone: '' }\r\n  const [volunteers, setVolunteers] = useState([])\r\n  const [volunteer, setVolunteer] = useState(initialFormState)\r\n  const [fromEdit, setFromEdit] = useState(false)\r\n  const [id, setId] = useState()\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    setVolunteer({ ...volunteer, [name]: value })\r\n  }\r\n\r\n  const getVolunteer = async () => {\r\n\r\n    const objArrAux = []\r\n\r\n    await fetch(url_volunteer, httpOptions('GET'))\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //assembly an object to populate the list\r\n        data.map((el) => {\r\n          objArrAux.push(\r\n            {\r\n              id: el._id,\r\n              name: el.name,\r\n              email: el.email,\r\n              phone: el.phone,\r\n            }\r\n          )\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    setVolunteers(objArrAux)\r\n  }\r\n\r\n  const saveVolunteer = () => {\r\n\r\n    if (!fromEdit) {\r\n      \r\n      fetch(url_volunteer, httpOptionsBody('POST', volunteer))\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        getVolunteer()\r\n        setVolunteer(initialFormState)\r\n      })\r\n    } else {\r\n      fetch(`http://localhost:5000/volunteer/${id}`, httpOptionsBody('PATCH', volunteer))\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        getVolunteer()\r\n        setVolunteer(initialFormState)\r\n      })\r\n    }\r\n\r\n    \r\n    setFromEdit(false)\r\n  }\r\n\r\n  //Data-grid columns definition\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', hide: true },\r\n    { field: 'name', headerName: 'Name', width: 300 },\r\n    { field: 'email', headerName: 'email', width: 350 },\r\n    { field: 'phone', headerName: 'phone', width: 200 },\r\n    {\r\n      field: \"\",\r\n      headerName: \"Actions\",\r\n      sortable: false,\r\n      width: 120,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params) => {\r\n        const onEdit = () => {\r\n          const api = params.api;\r\n            const fields = api\r\n              .getAllColumns()\r\n              .map((c) => c.field)\r\n              .filter((c) => c !== \"__check__\" && c !== \"id\" && !!c );\r\n            \r\n            const thisRow = {};  \r\n    \r\n            fields.forEach((f) => {\r\n              thisRow[f] = params.getValue(f);\r\n            });\r\n\r\n            setFromEdit(true)\r\n            setId(params.row.id)\r\n            setVolunteer(thisRow)\r\n            /* return alert(JSON.stringify(thisRow, null, 4)); */\r\n        }\r\n        const onDelete = () => {\r\n          fetch(`http://localhost:5000/volunteer/${params.row.id}`, httpOptions('DELETE'))\r\n            .then((response) => response.json())\r\n            .then(() => {\r\n              getVolunteer()\r\n            })\r\n        }\r\n        return (\r\n          <div>\r\n            <IconButton color=\"primary\" component=\"span\" onClick={onEdit}>\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton color=\"primary\" component=\"span\" onClick={onDelete}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getVolunteer()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='main-volunteer'>\r\n      <div className='add-volunteer'>\r\n        <h4>Volunteer</h4>\r\n        <div className=\"panel-stats-volunteer\">\r\n          <span className='title-panel-stats'>Volunteer Form</span>\r\n            <TextField id=\"name-field\" label=\"Name\" className='volunteer-field' name=\"name\" value={volunteer.name} onChange={handleInputChange} />\r\n            <TextField id=\"email-field\" label=\"Email\" className='volunteer-field' name=\"email\" value={volunteer.email} onChange={handleInputChange} />\r\n            <TextField id=\"phone-field\" label=\"Phone\" className='volunteer-field' name=\"phone\" value={volunteer.phone} onChange={handleInputChange} />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={saveVolunteer}>\r\n              Save\r\n            </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='volunteer-list'>\r\n        <span className='title-panel-stats'>Volunteer List</span>\r\n        <DataGrid rows={volunteers} columns={columns} pageSize={10} className='datatable' />\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Volunteer;\r\n\r\n\r\n\r\n","C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\redux\\Stats.reducer.js",["47"],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\redux\\store.js",[],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\utils\\common.js",[],"C:\\projetos\\covid-stats-project\\client\\react-redux\\src\\components\\overview\\stats\\Stats.js",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":31,"column":23,"nodeType":"56","messageId":"57","endLine":31,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":5,"column":1,"nodeType":"60","endLine":13,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":35,"column":31,"nodeType":"56","messageId":"57","endLine":35,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":66,"column":6,"nodeType":"63","endLine":66,"endColumn":12,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createObjArr'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [createObjArr, year]",{"range":"70","text":"71"},[1857,1863],"[createObjArr, year]"]